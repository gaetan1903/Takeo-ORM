# python build stubs for package core
# File is generated by gopy. Do not edit.
# gopy build -output=takeo/core -vm=python3 ./core

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_core')
mod.add_include('"core_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_core_UpdateData_CTor', retval('int64_t'), [])
mod.add_function('Slice_core_UpdateData_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_core_UpdateData_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_core_UpdateData_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_core_UpdateData_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_core_UpdateData_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_interface__CTor', retval('int64_t'), [])
mod.add_function('Slice_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_interface__subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_interface__set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_interface__append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_Map_string_interface__CTor', retval('int64_t'), [])
mod.add_function('Slice_Map_string_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Map_string_interface__elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Map_string_interface__subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Map_string_interface__set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Map_string_interface__append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Map_string_core_ColumnMetadata_CTor', retval('int64_t'), [])
mod.add_function('Map_string_core_ColumnMetadata_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_core_ColumnMetadata_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_core_ColumnMetadata_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_core_ColumnMetadata_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_core_ColumnMetadata_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_core_ColumnMetadata_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_interface__CTor', retval('int64_t'), [])
mod.add_function('Map_string_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_interface__delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_interface__keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_CTor', retval('int64_t'), [])
mod.add_function('Map_string_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_string_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_CTor', retval('int64_t'), [])
mod.add_function('core_DatabaseConfig_Host_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_Host_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_DatabaseConfig_Port_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_Port_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('core_DatabaseConfig_User_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_User_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_DatabaseConfig_Password_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_Password_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_DatabaseConfig_Database_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_Database_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_DatabaseConfig_SSLMode_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_DatabaseConfig_SSLMode_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_EntityRegistry_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_EntityRegistry_RegisterEntity', None, [param('int64_t', '_handle'), param('int64_t', 'entityType'), param('char*', 'tableName'), param('int64_t', 'metadata'), param('bool', 'goRun')])
add_checked_function(mod, 'core_EntityRegistry_RegisterEntityByName', None, [param('int64_t', '_handle'), param('char*', 'entityName'), param('int64_t', 'metadata'), param('bool', 'goRun')])
add_checked_function(mod, 'core_EntityRegistry_GetEntityGopy', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'typeName')])
mod.add_function('core_TakeoAPI_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_TakeoAPI_RegisterEntity', retval('char*'), [param('int64_t', '_handle'), param('char*', 'name'), param('char*', 'tableName'), param('char*', 'columnsJSON'), param('char*', 'primaryKey')])
add_checked_function(mod, 'core_TakeoAPI_Save', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('char*', 'dataJSON')])
add_checked_string_function(mod, 'core_TakeoAPI_FindByID', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'id')])
add_checked_string_function(mod, 'core_TakeoAPI_FindAll', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType')])
add_checked_function(mod, 'core_TakeoAPI_Update', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'id'), param('char*', 'updateJSON')])
add_checked_function(mod, 'core_TakeoAPI_Delete', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'id')])
add_checked_function(mod, 'core_TakeoAPI_CreateTable', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType')])
add_checked_function(mod, 'core_TakeoAPI_DropTable', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType')])
add_checked_function(mod, 'core_TakeoAPI_Close', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_TakeoAPI_Ping', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('core_ColumnMetadata_CTor', retval('int64_t'), [])
mod.add_function('core_ColumnMetadata_Name_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_ColumnMetadata_Name_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_ColumnMetadata_Type_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_ColumnMetadata_Type_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_ColumnMetadata_IsPrimaryKey_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('core_ColumnMetadata_IsPrimaryKey_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('core_ColumnMetadata_IsAutoIncrement_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('core_ColumnMetadata_IsAutoIncrement_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('core_ColumnMetadata_IsNullable_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('core_ColumnMetadata_IsNullable_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('core_DB_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_DB_Close', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_DB_Ping', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('core_TakeoManager_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_TakeoManager_RegisterEntity', retval('char*'), [param('int64_t', '_handle'), param('char*', 'name'), param('char*', 'tableName'), param('int64_t', 'columns'), param('char*', 'primaryKey')])
add_checked_function(mod, 'core_TakeoManager_Save', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'entityData')])
add_checked_function(mod, 'core_TakeoManager_SaveBatch', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'entitiesData')])
add_checked_function(mod, 'core_TakeoManager_FindByID', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'id')])
add_checked_function(mod, 'core_TakeoManager_FindAll', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType')])
add_checked_function(mod, 'core_TakeoManager_FindWhere', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'conditions')])
add_checked_function(mod, 'core_TakeoManager_Update', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'id'), param('int64_t', 'updates')])
add_checked_function(mod, 'core_TakeoManager_UpdateBatch', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'updates')])
add_checked_function(mod, 'core_TakeoManager_Delete', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'id')])
add_checked_function(mod, 'core_TakeoManager_DeleteBatch', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'ids')])
add_checked_function(mod, 'core_TakeoManager_DeleteWhere', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'conditions')])
add_checked_function(mod, 'core_TakeoManager_CreateTable', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType')])
add_checked_function(mod, 'core_TakeoManager_DropTable', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entityType')])
add_checked_function(mod, 'core_TakeoManager_BeginTransaction', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_TakeoManager_Close', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_TakeoManager_Ping', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('core_TakeoORM_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_TakeoORM_Close', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_TakeoORM_Ping', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_TakeoORM_RegisterEntityByName', None, [param('int64_t', '_handle'), param('char*', 'typeName'), param('char*', 'tableName'), param('int64_t', 'columns'), param('char*', 'primaryKey'), param('int64_t', 'autoIncrementColumns'), param('bool', 'goRun')])
add_checked_function(mod, 'core_TakeoORM_CreateEntity', retval('char*'), [param('int64_t', '_handle'), param('char*', 'typeName'), param('int64_t', 'values')])
add_checked_function(mod, 'core_TakeoORM_CreateEntitiesBatch', retval('char*'), [param('int64_t', '_handle'), param('char*', 'typeName'), param('int64_t', 'entitiesData')])
add_checked_function(mod, 'core_TakeoORM_FindEntityByID', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'typeName'), param('char*', 'id')])
add_checked_function(mod, 'core_TakeoORM_FindAllEntities', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'typeName')])
add_checked_function(mod, 'core_TakeoORM_UpdateEntity', retval('char*'), [param('int64_t', '_handle'), param('char*', 'typeName'), param('char*', 'id'), param('int64_t', 'values')])
add_checked_function(mod, 'core_TakeoORM_DeleteEntity', retval('char*'), [param('int64_t', '_handle'), param('char*', 'typeName'), param('char*', 'id')])
add_checked_function(mod, 'core_TakeoORM_DeleteEntitiesBatch', retval('char*'), [param('int64_t', '_handle'), param('char*', 'typeName'), param('int64_t', 'ids')])
mod.add_function('core_TakeoTransaction_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_TakeoTransaction_Save', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'entityType'), param('int64_t', 'entityData')])
add_checked_function(mod, 'core_TakeoTransaction_Commit', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'core_TakeoTransaction_Rollback', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('core_UpdateData_CTor', retval('int64_t'), [])
mod.add_function('core_UpdateData_ID_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('core_UpdateData_ID_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('core_UpdateData_Updates_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('core_UpdateData_Updates_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('core_EntityMetadata_CTor', retval('int64_t'), [])
mod.add_function('core_EntityMetadata_TableName_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_EntityMetadata_TableName_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_EntityMetadata_PrimaryKey_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('core_EntityMetadata_PrimaryKey_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('core_EntityMetadata_Columns_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('core_EntityMetadata_Columns_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('core_EntityMetadata_ColumnOrder_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('core_EntityMetadata_ColumnOrder_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'core_EntityMetadata_BuildSelectQuery', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'core_EntityMetadata_BuildInsertQuery', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'core_EntityMetadata_BuildUpdateQuery', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'core_EntityMetadata_BuildDeleteQuery', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('core_Repository_CTor', retval('int64_t'), [])
add_checked_function(mod, 'core_Repository_Create', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entity')])
add_checked_function(mod, 'core_Repository_FindByID', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'entityType'), param('char*', 'id'), param('char*', 'result')])
add_checked_function(mod, 'core_Repository_FindAll', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'entityType'), param('char*', 'results')])
add_checked_function(mod, 'core_Repository_Update', retval('char*'), [param('int64_t', '_handle'), param('char*', 'entity')])
add_checked_function(mod, 'core_Repository_Delete', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'entityType'), param('char*', 'id')])
add_checked_function(mod, 'core_NewEntityRegistry', retval('int64_t'), [])
add_checked_function(mod, 'core_NewTakeoAPI', retval('int64_t'), [param('char*', 'host'), param('int64_t', 'port'), param('char*', 'user'), param('char*', 'password'), param('char*', 'database'), param('char*', 'sslmode')])
add_checked_function(mod, 'core_NewDB', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'core_NewTakeoManager', retval('int64_t'), [param('char*', 'host'), param('int64_t', 'port'), param('char*', 'user'), param('char*', 'password'), param('char*', 'database'), param('char*', 'sslmode')])
add_checked_function(mod, 'core_NewTakeoORM', retval('int64_t'), [param('char*', 'host'), param('int64_t', 'port'), param('char*', 'user'), param('char*', 'password'), param('char*', 'database'), param('char*', 'sslmode')])
add_checked_function(mod, 'core_ExtractEntityMetadata', retval('int64_t'), [param('int64_t', 'entityType'), param('char*', 'tableName')])
add_checked_function(mod, 'core_NewRepository', retval('int64_t'), [param('int64_t', 'db'), param('int64_t', 'registry')])

mod.generate(open('core.c', 'w'))

